{
  "Query Handler": {
    "prefix": "qhandler",
    "body": [
      "	public class Query : IRequest<${1:ReturnObject}> { }",
      "",
      "		public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
      "		{",
      "			private readonly DataContext _context;",
      "			public Handler(DataContext context)",
      "			{",
      "				_context = context;",
      "			}",
      "			public async Task<${1:ReturnObject}> Handle(Query request, CancellationToken cancellationToken)",
      "			{",
      "				// handler logic goes here",
      "		",
      "			}",
      "		}"
    ],
    "description": "Query Handler"
  },
  "Command Handler": {
    "prefix": "chandler",
    "body": [
      "	public class Create",
      "	{",
      "		public class Command : IRequest",
      "		{",
      "		};",
      "",
      "		public class Handler : IRequestHandler<Command>",
      "		{",
      "			private readonly DataContext _context;",
      "			public Handler(DataContext context)",
      "			{",
      "				_context = context;",
      "			}",
      "			public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
      "			{",
      "		",
      "",
      "				var success = await _context.SaveChangesAsync() > 0;",
      "",
      "				if (success) return Unit.Value;",
      "",
      "				else throw new Exception(\"Problem saving\");",
      "			}",
      "		}",
      "	}"
    ],
    "description": "Command Handler"
  }
}
